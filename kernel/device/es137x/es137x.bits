-- ES1370_CONTROL=0x00 R/W: Interrupt/Chip select control register
31 ADC_STOP disable capture buffer transfers
30 XCTL1 general purpose output bit
28:16 PCLKDIV clock divide ratio for DAC2
15 MSFMTSEL MPEG serial data format; 0 = SONY, 1 = I2S
14 SBB clock source for DAC - 0 = clock generator; 1 = MPEG clocks
13:12 WTSRSEL fixed frequency clock for DAC1
11 DAC_SYNC DAC's are synchronous
10 CCB_INTE CCB voice interrupts enable
9 M_CB capture clock source; 0 = ADC; 1 = MPEG
8 XCTL0 generap purpose output bit
7 BREQ memory bus request enable
6 DAC1EN DAC1 playback channel enable
5 DAC2EN DAC2 playback channel enable
4 ADCEN ADC capture channel enable
3 UARTEN UART enable
2 JOYEN Joystick module enable
1 CDC_EN Codec interface enable
0 SERR_DIS PCI serr signal disable

-- ES1370_CONTROL_WTSRSEL_5K=0
-- ES1370_CONTROL_WTSRSEL_11K=1
-- ES1370_CONTROL_WTSRSEL_22K=2
-- ES1370_CONTROL_WTSRSEL_44K=3

-- ES1370_STATUS=0x04
31 INTR Interrupt is pending
10 CSTAT CODEC is busy or register write in progress
9 CBUSY CODEC is busy
8 CWRIP CODEC register write in progress
6:5 VC voice code from CCB module
4 CCB_INT CCB interrupt pending
3 UART_INT UART interrupt pending
2 DAC1_INT DAC1 channel interrupt pending
1 DAC2_INT DAC2 channel interrupt pending
0 ADC_INT ADC channel interrupt pending

-- ES1370_UARTDATA=0x08

-- ES1370_UARTSTATUS=0x09 R/O: UART status register
7 RX_INT Rx interrupt occurred
2 TX_INT Tx interrupt occurred
1 TX_RDY Tx ready
0 RX_RDY Rx ready

#define ES_REG_UART_CONTROL 0x09	/* W/O: UART control register */
7 RX_INTE Rx interrupt enable
6:5 TX_INTE Tx interrupt enable
1:0 CTRL Control

-- ES1370_UARTTEST=0x0A
0 TEST Test mode enabled

-- ES1370_MEMPAGE=0x0C
3:0 PAGE page select

-- ES1370_PAGE_DAC=0x0c
-- ES1370_PAGE_ADC=0x0d
-- ES1370_PAGE_UART=0x0e
-- ES1370_PAGE_UART1=0x0f

-- ES1370_CODEC=0x10 W/O: Codec write register address
#define ES_REG_1370_CODEC 0x10	/*
15:8 ADDR
7:0 DATA

-- ES1370_SERIAL=0x20 R/W: Serial interface control register
21:19 END_INC binary offset value to increment / loop end */
18:16 ST_INC binary offset value to increment / start
15 ADC_LOOP_SEL 0=loop, 1=stop
14 PB1_LOOP_SEL 0=loop, 1=stop
13 PB2_LOOP_SEL 0=loop, 1=stop
12 PB2_PAUSE 0=play 1=pause
11 PB1_PAUSE 0=play 1=pause
10 ADC_INTE ADC interrupt enable
9 PB2_INTE DAC2 interrupt enable
8 PB1_INTE DAC1 interrupt enable
7 SCT_RLD force saple count reload for DAC1
6 DAC_SEN stop when: 0=DAC2 play back zeros, 1=play back last sample
5 ADC_BITS 0=8-bit, 1=16-bit
4 ADC_CHAN 0=mono, 1=stereo
3 PB2_BITS 0=8-bit, 1=16-bit
2 PB2_CHAN 0=mono, 1=stereo
1 PB1_BITS 0=8-bit, 1=16-bit
0 PB1_CHAN 0=mono, 1=stereo

-- ES1370_PB1FC=0x24
#define ES_REG_DAC1_COUNT 0x24	/* R/W: DAC1 sample count register */

-- ES1370_PB2FC=0x28
#define ES_REG_DAC2_COUNT 0x28	/* R/W: DAC2 sample count register */

-- ES1370_RECFC=0x2C
#define ES_REG_ADC_COUNT  0x2c	/* R/W: ADC sample count register */
31:16 CURR_COUNT
15:0 COUNT

-- ES1370_PGC_PB1ADDR=0x30
#define ES_REG_DAC1_FRAME 0x30	/* R/W: PAGE 0x0c; DAC1 frame address */

-- ES1370_PGC_PB1DEF=0x34
#define ES_REG_DAC1_SIZE  0x34	/* R/W: PAGE 0x0c; DAC1 frame size */

-- ES1370_PGC_PB2ADDR=0x38
#define ES_REG_DAC2_FRAME 0x38	/* R/W: PAGE 0x0c; DAC2 frame address */

-- ES1370_PGC_PB2DEF=0x3C
#define ES_REG_DAC2_SIZE  0x3c	/* R/W: PAGE 0x0c; DAC2 frame size */

-- ES1370_PGD_RECADDR=0x30
#define ES_REG_ADC_FRAME  0x30	/* R/W: PAGE 0x0d; ADC frame address */

-- ES1370_PGD_RECDEF=0x34
#define ES_REG_ADC_SIZE	  0x34	/* R/W: PAGE 0x0d; ADC frame size */
#define   ES_REG_FCURR_COUNTO(o) (((o)&0xffff)<<16)
#define   ES_REG_FCURR_COUNTM    (0xffff<<16)
#define   ES_REG_FCURR_COUNTI(i) (((i)>>14)&0x3fffc)
#define   ES_REG_FSIZEO(o)	 (((o)&0xffff)<<0)
#define   ES_REG_FSIZEM		 (0xffff<<0)
#define   ES_REG_FSIZEI(i)	 (((i)>>0)&0xffff)

-- ES1370_PGE_UARTDATA=0x30
#define ES_REG_UART_FIFO  0x30	/* R/W: PAGE 0x0e; UART FIFO register */
#define   ES_REG_UF_VALID	 (1<<8)
#define   ES_REG_UF_BYTEO(o)	 (((o)&0xff)<<0)
#define   ES_REG_UF_BYTEM	 (0xff<<0)
#define   ES_REG_UF_BYTEI(i)	 (((i)>>0)&0xff)

-- ES1370_PGE_PHANTOM_ADDR=0x38
#define ES_REG_PHANTOM_FRAME 0x38 /* R/W: PAGE 0x0d: phantom frame address */

-- ES1370_PGE_PHANTOM_SIZE=0x3c
#define ES_REG_PHANTOM_COUNT 0x3c /* R/W: PAGE 0x0d: phantom frame count */

-- ES1370_SMPREG_DAC1=0x70
-- ES1370_SMPREG_DAC2=0x74
-- ES1370_SMPREG_ADC=0x78
-- ES1370_SMPREG_VOL_ADC=0x6c
-- ES1370_SMPREG_VOL_DAC1=0x7c
-- ES1370_SMPREG_VOL_DAC2=0x7e
-- ES1370_SMPREG_TRUNC_N=0x00
-- ES1370_SMPREG_INT_REGS=0x01
-- ES1370_SMPREG_ACCUM_FRAC=0x02
-- ES1370_SMPREG_VFREQ_FRAC=0x03
