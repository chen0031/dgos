// THIS FILE IS AUTOMATICALLY GENERATED
// from kernel/arch/x86_64/cpu/apic.bits

// MP_CPU_FLAGS

#define MP_CPU_FLAGS_ENABLED_BIT       0
#define MP_CPU_FLAGS_BSP_BIT           1

#define MP_CPU_FLAGS_ENABLED_BITS      1
#define MP_CPU_FLAGS_BSP_BITS          1
#define MP_CPU_FLAGS_ENABLED_MASK      ((1U << MP_CPU_FLAGS_ENABLED_BITS)-1)
#define MP_CPU_FLAGS_BSP_MASK          ((1U << MP_CPU_FLAGS_BSP_BITS)-1)

// CPU is enabled
#define MP_CPU_FLAGS_ENABLED \
    (MP_CPU_FLAGS_ENABLED_MASK << MP_CPU_FLAGS_ENABLED_BIT)

// 1=bootstrap processor, 0=application processor
#define MP_CPU_FLAGS_BSP \
    (MP_CPU_FLAGS_BSP_MASK << MP_CPU_FLAGS_BSP_BIT)

#define MP_CPU_FLAGS_ENABLED_n(n)      ((n) << MP_CPU_FLAGS_ENABLED_BIT)
#define MP_CPU_FLAGS_BSP_n(n)          ((n) << MP_CPU_FLAGS_BSP_BIT)

#define MP_CPU_FLAGS_ENABLED_GET(n) \
    (((n) >> MP_CPU_FLAGS_ENABLED_BIT) & MP_CPU_FLAGS_ENABLED_MASK)
#define MP_CPU_FLAGS_BSP_GET(n) \
    (((n) >> MP_CPU_FLAGS_BSP_BIT) & MP_CPU_FLAGS_BSP_MASK)

#define MP_CPU_FLAGS_ENABLED_SET(r,n) \
    ((r) = ((r) & ~MP_CPU_FLAGS_ENABLED) | MP_CPU_FLAGS_ENABLED_n((n)))
#define MP_CPU_FLAGS_BSP_SET(r,n) \
    ((r) = ((r) & ~MP_CPU_FLAGS_BSP) | MP_CPU_FLAGS_BSP_n((n)))

// MP_IOAPIC_FLAGS

#define MP_IOAPIC_FLAGS_ENABLED_BIT       0

#define MP_IOAPIC_FLAGS_ENABLED_BITS      1
#define MP_IOAPIC_FLAGS_ENABLED_MASK \
    ((1U << MP_IOAPIC_FLAGS_ENABLED_BITS)-1)
#define MP_IOAPIC_FLAGS_ENABLED \
    (MP_IOAPIC_FLAGS_ENABLED_MASK << MP_IOAPIC_FLAGS_ENABLED_BIT)

#define MP_IOAPIC_FLAGS_ENABLED_n(n)      ((n) << MP_IOAPIC_FLAGS_ENABLED_BIT)

#define MP_IOAPIC_FLAGS_ENABLED_GET(n) \
    (((n) >> MP_IOAPIC_FLAGS_ENABLED_BIT) & MP_IOAPIC_FLAGS_ENABLED_MASK)

#define MP_IOAPIC_FLAGS_ENABLED_SET(r,n) \
    ((r) = ((r) & ~MP_IOAPIC_FLAGS_ENABLED) | MP_IOAPIC_FLAGS_ENABLED_n((n)))

// MP_INTR_FLAGS

#define MP_INTR_FLAGS_POLARITY_BIT       0
#define MP_INTR_FLAGS_TRIGGER_BIT        2

#define MP_INTR_FLAGS_POLARITY_BITS      2
#define MP_INTR_FLAGS_TRIGGER_BITS       2
#define MP_INTR_FLAGS_POLARITY_MASK \
    ((1U << MP_INTR_FLAGS_POLARITY_BITS)-1)
#define MP_INTR_FLAGS_TRIGGER_MASK       ((1U << MP_INTR_FLAGS_TRIGGER_BITS)-1)
#define MP_INTR_FLAGS_POLARITY \
    (MP_INTR_FLAGS_POLARITY_MASK << MP_INTR_FLAGS_POLARITY_BIT)
#define MP_INTR_FLAGS_TRIGGER \
    (MP_INTR_FLAGS_TRIGGER_MASK << MP_INTR_FLAGS_TRIGGER_BIT)

#define MP_INTR_FLAGS_POLARITY_n(n)      ((n) << MP_INTR_FLAGS_POLARITY_BIT)
#define MP_INTR_FLAGS_TRIGGER_n(n)       ((n) << MP_INTR_FLAGS_TRIGGER_BIT)

#define MP_INTR_FLAGS_POLARITY_GET(n) \
    (((n) >> MP_INTR_FLAGS_POLARITY_BIT) & MP_INTR_FLAGS_POLARITY_MASK)
#define MP_INTR_FLAGS_TRIGGER_GET(n) \
    (((n) >> MP_INTR_FLAGS_TRIGGER_BIT) & MP_INTR_FLAGS_TRIGGER_MASK)

#define MP_INTR_FLAGS_POLARITY_SET(r,n) \
    ((r) = ((r) & ~MP_INTR_FLAGS_POLARITY) | MP_INTR_FLAGS_POLARITY_n((n)))
#define MP_INTR_FLAGS_TRIGGER_SET(r,n) \
    ((r) = ((r) & ~MP_INTR_FLAGS_TRIGGER) | MP_INTR_FLAGS_TRIGGER_n((n)))

// MP_INTR_FLAGS_POLARITY_DEFAULT
#define MP_INTR_FLAGS_POLARITY_DEFAULT 0

// MP_INTR_FLAGS_POLARITY_ACTIVEHI
#define MP_INTR_FLAGS_POLARITY_ACTIVEHI 1

// MP_INTR_FLAGS_POLARITY_ACTIVELO
#define MP_INTR_FLAGS_POLARITY_ACTIVELO 3

// MP_INTR_FLAGS_TRIGGER_DEFAULT
#define MP_INTR_FLAGS_TRIGGER_DEFAULT 0

// MP_INTR_FLAGS_TRIGGER_EDGE
#define MP_INTR_FLAGS_TRIGGER_EDGE 1

// MP_INTR_FLAGS_TRIGGER_LEVEL
#define MP_INTR_FLAGS_TRIGGER_LEVEL 3

// MP_INTR_TYPE_APIC
#define MP_INTR_TYPE_APIC 0

// MP_INTR_TYPE_NMI
#define MP_INTR_TYPE_NMI 1

// MP_INTR_TYPE_SMI
#define MP_INTR_TYPE_SMI 2

// MP_INTR_TYPE_EXTINT
#define MP_INTR_TYPE_EXTINT 3

// MP_TABLE_TYPE_CPU
#define MP_TABLE_TYPE_CPU 0

// MP_TABLE_TYPE_BUS
#define MP_TABLE_TYPE_BUS 1

// MP_TABLE_TYPE_IOAPIC
#define MP_TABLE_TYPE_IOAPIC 2

// MP_TABLE_TYPE_IOINTR
#define MP_TABLE_TYPE_IOINTR 3

// MP_TABLE_TYPE_LINTR
#define MP_TABLE_TYPE_LINTR 4

// MP_TABLE_TYPE_ADDRMAP
#define MP_TABLE_TYPE_ADDRMAP 128

// MP_TABLE_TYPE_BUSHIER
#define MP_TABLE_TYPE_BUSHIER 129

// MP_TABLE_TYPE_BUSCOMPAT
#define MP_TABLE_TYPE_BUSCOMPAT 130

// ACPI_MADT_REC_TYPE_LAPIC
#define ACPI_MADT_REC_TYPE_LAPIC 0

// ACPI_MADT_REC_TYPE_IOAPIC
#define ACPI_MADT_REC_TYPE_IOAPIC 1

// ACPI_MADT_REC_TYPE_IRQ
#define ACPI_MADT_REC_TYPE_IRQ 2

// ACPI_MADT_REC_TYPE_NMI
#define ACPI_MADT_REC_TYPE_NMI 3

// ACPI_MADT_REC_TYPE_LNMI
#define ACPI_MADT_REC_TYPE_LNMI 4

// ACPI_MADT_REC_TYPE_LIRQ
#define ACPI_MADT_REC_TYPE_LIRQ 5

// ACPI_MADT_REC_TYPE_X2APIC
#define ACPI_MADT_REC_TYPE_X2APIC 9

// ACPI_MADT_ENT_IRQ_FLAGS

#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_BIT       0
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_BIT        2

#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_BITS      2
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_BITS       2
#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_MASK \
    ((1U << ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_BITS)-1)
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_MASK \
    ((1U << ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_BITS)-1)
#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY \
    (ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_MASK \
    << ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_BIT)
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER \
    (ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_MASK \
    << ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_BIT)

#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_n(n) \
    ((n) << ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_BIT)
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_n(n) \
    ((n) << ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_BIT)

#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_GET(n) \
    (((n) >> ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_BIT) \
    & ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_MASK)
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_GET(n) \
    (((n) >> ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_BIT) \
    & ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_MASK)

#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_SET(r,n) \
    ((r) = ((r) & ~ACPI_MADT_ENT_IRQ_FLAGS_POLARITY) \
    | ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_n((n)))
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_SET(r,n)   ((r) = ((r) & \
    ~ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER) | ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_n((n)))

// ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_DEFAULT
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_DEFAULT 0

// ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_EDGE
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_EDGE 1

// ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_LEVEL
#define ACPI_MADT_ENT_IRQ_FLAGS_TRIGGER_LEVEL 3

// ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_DEFAULT
#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_DEFAULT 0

// ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_ACTIVEHI
#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_ACTIVEHI 1

// ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_ACTIVELO
#define ACPI_MADT_ENT_IRQ_FLAGS_POLARITY_ACTIVELO 3

// IOAPIC_VER

#define IOAPIC_VER_VERSION_BIT       0
#define IOAPIC_VER_ENTRIES_BIT       16

#define IOAPIC_VER_VERSION_BITS      8
#define IOAPIC_VER_ENTRIES_BITS      8
#define IOAPIC_VER_VERSION_MASK      ((1U << IOAPIC_VER_VERSION_BITS)-1)
#define IOAPIC_VER_ENTRIES_MASK      ((1U << IOAPIC_VER_ENTRIES_BITS)-1)
#define IOAPIC_VER_VERSION \
    (IOAPIC_VER_VERSION_MASK << IOAPIC_VER_VERSION_BIT)

// The number of I/O redirection entries implemented
#define IOAPIC_VER_ENTRIES \
    (IOAPIC_VER_ENTRIES_MASK << IOAPIC_VER_ENTRIES_BIT)

#define IOAPIC_VER_VERSION_n(n)      ((n) << IOAPIC_VER_VERSION_BIT)
#define IOAPIC_VER_ENTRIES_n(n)      ((n) << IOAPIC_VER_ENTRIES_BIT)

#define IOAPIC_VER_VERSION_GET(n) \
    (((n) >> IOAPIC_VER_VERSION_BIT) & IOAPIC_VER_VERSION_MASK)
#define IOAPIC_VER_ENTRIES_GET(n) \
    (((n) >> IOAPIC_VER_ENTRIES_BIT) & IOAPIC_VER_ENTRIES_MASK)

#define IOAPIC_VER_VERSION_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_VER_VERSION) | IOAPIC_VER_VERSION_n((n)))
#define IOAPIC_VER_ENTRIES_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_VER_ENTRIES) | IOAPIC_VER_ENTRIES_n((n)))

// IOAPIC_REDLO

#define IOAPIC_REDLO_VECTOR_BIT          0
#define IOAPIC_REDLO_DELIVERY_BIT        8
#define IOAPIC_REDLO_DESTMODE_BIT        11
#define IOAPIC_REDLO_STATUS_BIT          12
#define IOAPIC_REDLO_POLARITY_BIT        13
#define IOAPIC_REDLO_REMOTEIRR_BIT       14
#define IOAPIC_REDLO_TRIGGER_BIT         15
#define IOAPIC_REDLO_MASKIRQ_BIT         16

#define IOAPIC_REDLO_VECTOR_BITS         8
#define IOAPIC_REDLO_DELIVERY_BITS       3
#define IOAPIC_REDLO_DESTMODE_BITS       1
#define IOAPIC_REDLO_STATUS_BITS         1
#define IOAPIC_REDLO_POLARITY_BITS       1
#define IOAPIC_REDLO_REMOTEIRR_BITS      1
#define IOAPIC_REDLO_TRIGGER_BITS        1
#define IOAPIC_REDLO_MASKIRQ_BITS        1
#define IOAPIC_REDLO_VECTOR_MASK         ((1U << IOAPIC_REDLO_VECTOR_BITS)-1)
#define IOAPIC_REDLO_DELIVERY_MASK       ((1U << IOAPIC_REDLO_DELIVERY_BITS)-1)
#define IOAPIC_REDLO_DESTMODE_MASK       ((1U << IOAPIC_REDLO_DESTMODE_BITS)-1)
#define IOAPIC_REDLO_STATUS_MASK         ((1U << IOAPIC_REDLO_STATUS_BITS)-1)
#define IOAPIC_REDLO_POLARITY_MASK       ((1U << IOAPIC_REDLO_POLARITY_BITS)-1)
#define IOAPIC_REDLO_REMOTEIRR_MASK \
    ((1U << IOAPIC_REDLO_REMOTEIRR_BITS)-1)
#define IOAPIC_REDLO_TRIGGER_MASK        ((1U << IOAPIC_REDLO_TRIGGER_BITS)-1)
#define IOAPIC_REDLO_MASKIRQ_MASK        ((1U << IOAPIC_REDLO_MASKIRQ_BITS)-1)
#define IOAPIC_REDLO_VECTOR \
    (IOAPIC_REDLO_VECTOR_MASK << IOAPIC_REDLO_VECTOR_BIT)
#define IOAPIC_REDLO_DELIVERY \
    (IOAPIC_REDLO_DELIVERY_MASK << IOAPIC_REDLO_DELIVERY_BIT)
#define IOAPIC_REDLO_DESTMODE \
    (IOAPIC_REDLO_DESTMODE_MASK << IOAPIC_REDLO_DESTMODE_BIT)
#define IOAPIC_REDLO_STATUS \
    (IOAPIC_REDLO_STATUS_MASK << IOAPIC_REDLO_STATUS_BIT)
#define IOAPIC_REDLO_POLARITY \
    (IOAPIC_REDLO_POLARITY_MASK << IOAPIC_REDLO_POLARITY_BIT)
#define IOAPIC_REDLO_REMOTEIRR \
    (IOAPIC_REDLO_REMOTEIRR_MASK << IOAPIC_REDLO_REMOTEIRR_BIT)
#define IOAPIC_REDLO_TRIGGER \
    (IOAPIC_REDLO_TRIGGER_MASK << IOAPIC_REDLO_TRIGGER_BIT)
#define IOAPIC_REDLO_MASKIRQ \
    (IOAPIC_REDLO_MASKIRQ_MASK << IOAPIC_REDLO_MASKIRQ_BIT)

#define IOAPIC_REDLO_VECTOR_n(n)         ((n) << IOAPIC_REDLO_VECTOR_BIT)
#define IOAPIC_REDLO_DELIVERY_n(n)       ((n) << IOAPIC_REDLO_DELIVERY_BIT)
#define IOAPIC_REDLO_DESTMODE_n(n)       ((n) << IOAPIC_REDLO_DESTMODE_BIT)
#define IOAPIC_REDLO_STATUS_n(n)         ((n) << IOAPIC_REDLO_STATUS_BIT)
#define IOAPIC_REDLO_POLARITY_n(n)       ((n) << IOAPIC_REDLO_POLARITY_BIT)
#define IOAPIC_REDLO_REMOTEIRR_n(n)      ((n) << IOAPIC_REDLO_REMOTEIRR_BIT)
#define IOAPIC_REDLO_TRIGGER_n(n)        ((n) << IOAPIC_REDLO_TRIGGER_BIT)
#define IOAPIC_REDLO_MASKIRQ_n(n)        ((n) << IOAPIC_REDLO_MASKIRQ_BIT)

#define IOAPIC_REDLO_VECTOR_GET(n) \
    (((n) >> IOAPIC_REDLO_VECTOR_BIT) & IOAPIC_REDLO_VECTOR_MASK)
#define IOAPIC_REDLO_DELIVERY_GET(n) \
    (((n) >> IOAPIC_REDLO_DELIVERY_BIT) & IOAPIC_REDLO_DELIVERY_MASK)
#define IOAPIC_REDLO_DESTMODE_GET(n) \
    (((n) >> IOAPIC_REDLO_DESTMODE_BIT) & IOAPIC_REDLO_DESTMODE_MASK)
#define IOAPIC_REDLO_STATUS_GET(n) \
    (((n) >> IOAPIC_REDLO_STATUS_BIT) & IOAPIC_REDLO_STATUS_MASK)
#define IOAPIC_REDLO_POLARITY_GET(n) \
    (((n) >> IOAPIC_REDLO_POLARITY_BIT) & IOAPIC_REDLO_POLARITY_MASK)
#define IOAPIC_REDLO_REMOTEIRR_GET(n) \
    (((n) >> IOAPIC_REDLO_REMOTEIRR_BIT) & IOAPIC_REDLO_REMOTEIRR_MASK)
#define IOAPIC_REDLO_TRIGGER_GET(n) \
    (((n) >> IOAPIC_REDLO_TRIGGER_BIT) & IOAPIC_REDLO_TRIGGER_MASK)
#define IOAPIC_REDLO_MASKIRQ_GET(n) \
    (((n) >> IOAPIC_REDLO_MASKIRQ_BIT) & IOAPIC_REDLO_MASKIRQ_MASK)

#define IOAPIC_REDLO_VECTOR_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_VECTOR) | IOAPIC_REDLO_VECTOR_n((n)))
#define IOAPIC_REDLO_DELIVERY_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_DELIVERY) | IOAPIC_REDLO_DELIVERY_n((n)))
#define IOAPIC_REDLO_DESTMODE_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_DESTMODE) | IOAPIC_REDLO_DESTMODE_n((n)))
#define IOAPIC_REDLO_STATUS_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_STATUS) | IOAPIC_REDLO_STATUS_n((n)))
#define IOAPIC_REDLO_POLARITY_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_POLARITY) | IOAPIC_REDLO_POLARITY_n((n)))
#define IOAPIC_REDLO_REMOTEIRR_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_REMOTEIRR) | IOAPIC_REDLO_REMOTEIRR_n((n)))
#define IOAPIC_REDLO_TRIGGER_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_TRIGGER) | IOAPIC_REDLO_TRIGGER_n((n)))
#define IOAPIC_REDLO_MASKIRQ_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDLO_MASKIRQ) | IOAPIC_REDLO_MASKIRQ_n((n)))

// IOAPIC_REDLO_DELIVERY_APIC
#define IOAPIC_REDLO_DELIVERY_APIC 0

// IOAPIC_REDLO_DELIVERY_LOWPRI
#define IOAPIC_REDLO_DELIVERY_LOWPRI 1

// IOAPIC_REDLO_DELIVERY_SMI
#define IOAPIC_REDLO_DELIVERY_SMI 2

// IOAPIC_REDLO_DELIVERY_NMI
#define IOAPIC_REDLO_DELIVERY_NMI 4

// IOAPIC_REDLO_DELIVERY_INIT
#define IOAPIC_REDLO_DELIVERY_INIT 5

// IOAPIC_REDLO_DELIVERY_EXTINT
#define IOAPIC_REDLO_DELIVERY_EXTINT 7

// IOAPIC_REDLO_DESTMODE_PHYSICAL
#define IOAPIC_REDLO_DESTMODE_PHYSICAL 0

// IOAPIC_REDLO_DESTMODE_LOGICAL
#define IOAPIC_REDLO_DESTMODE_LOGICAL 1

// IOAPIC_REDLO_TRIGGER_EDGE
#define IOAPIC_REDLO_TRIGGER_EDGE 0

// IOAPIC_REDLO_TRIGGER_LEVEL
#define IOAPIC_REDLO_TRIGGER_LEVEL 1

// IOAPIC_REDLO_POLARITY_ACTIVEHI
#define IOAPIC_REDLO_POLARITY_ACTIVEHI 0

// IOAPIC_REDLO_POLARITY_ACTIVELO
#define IOAPIC_REDLO_POLARITY_ACTIVELO 1

// IOAPIC_REDHI

#define IOAPIC_REDHI_DEST_BIT       24

#define IOAPIC_REDHI_DEST_BITS      8
#define IOAPIC_REDHI_DEST_MASK      ((1U << IOAPIC_REDHI_DEST_BITS)-1)
#define IOAPIC_REDHI_DEST \
    (IOAPIC_REDHI_DEST_MASK << IOAPIC_REDHI_DEST_BIT)

#define IOAPIC_REDHI_DEST_n(n)      ((n) << IOAPIC_REDHI_DEST_BIT)

#define IOAPIC_REDHI_DEST_GET(n) \
    (((n) >> IOAPIC_REDHI_DEST_BIT) & IOAPIC_REDHI_DEST_MASK)

#define IOAPIC_REDHI_DEST_SET(r,n) \
    ((r) = ((r) & ~IOAPIC_REDHI_DEST) | IOAPIC_REDHI_DEST_n((n)))

//
// APIC: Only used in xAPIC mode

#define APIC_DEST_BIT       24

#define APIC_DEST_BITS      8
#define APIC_DEST_MASK      ((1U << APIC_DEST_BITS)-1)
#define APIC_DEST           (APIC_DEST_MASK << APIC_DEST_BIT)

#define APIC_DEST_n(n)      ((n) << APIC_DEST_BIT)

#define APIC_DEST_GET(n)    (((n) >> APIC_DEST_BIT) & APIC_DEST_MASK)

#define APIC_DEST_SET(r,n)  ((r) = ((r) & ~APIC_DEST) | APIC_DEST_n((n)))

// APIC_CMD

#define APIC_CMD_VECTOR_BIT          0
#define APIC_CMD_SIPI_PAGE_BIT       0
#define APIC_CMD_DELIVERY_BIT        8
#define APIC_CMD_DEST_MODE_BIT       11
#define APIC_CMD_PENDING_BIT         12
#define APIC_CMD_LEVEL_BIT           14
#define APIC_CMD_ILD_BIT             15
#define APIC_CMD_DEST_TYPE_BIT       18

#define APIC_CMD_VECTOR_BITS         8
#define APIC_CMD_SIPI_PAGE_BITS      8
#define APIC_CMD_DELIVERY_BITS       3
#define APIC_CMD_DEST_MODE_BITS      1
#define APIC_CMD_PENDING_BITS        1
#define APIC_CMD_LEVEL_BITS          1
#define APIC_CMD_ILD_BITS            1
#define APIC_CMD_DEST_TYPE_BITS      2
#define APIC_CMD_VECTOR_MASK         ((1U << APIC_CMD_VECTOR_BITS)-1)
#define APIC_CMD_SIPI_PAGE_MASK      ((1U << APIC_CMD_SIPI_PAGE_BITS)-1)
#define APIC_CMD_DELIVERY_MASK       ((1U << APIC_CMD_DELIVERY_BITS)-1)
#define APIC_CMD_DEST_MODE_MASK      ((1U << APIC_CMD_DEST_MODE_BITS)-1)
#define APIC_CMD_PENDING_MASK        ((1U << APIC_CMD_PENDING_BITS)-1)
#define APIC_CMD_LEVEL_MASK          ((1U << APIC_CMD_LEVEL_BITS)-1)
#define APIC_CMD_ILD_MASK            ((1U << APIC_CMD_ILD_BITS)-1)
#define APIC_CMD_DEST_TYPE_MASK      ((1U << APIC_CMD_DEST_TYPE_BITS)-1)
#define APIC_CMD_VECTOR \
    (APIC_CMD_VECTOR_MASK << APIC_CMD_VECTOR_BIT)
#define APIC_CMD_SIPI_PAGE \
    (APIC_CMD_SIPI_PAGE_MASK << APIC_CMD_SIPI_PAGE_BIT)
#define APIC_CMD_DELIVERY \
    (APIC_CMD_DELIVERY_MASK << APIC_CMD_DELIVERY_BIT)
#define APIC_CMD_DEST_MODE \
    (APIC_CMD_DEST_MODE_MASK << APIC_CMD_DEST_MODE_BIT)
#define APIC_CMD_PENDING \
    (APIC_CMD_PENDING_MASK << APIC_CMD_PENDING_BIT)
#define APIC_CMD_LEVEL \
    (APIC_CMD_LEVEL_MASK << APIC_CMD_LEVEL_BIT)
#define APIC_CMD_ILD                 (APIC_CMD_ILD_MASK << APIC_CMD_ILD_BIT)
#define APIC_CMD_DEST_TYPE \
    (APIC_CMD_DEST_TYPE_MASK << APIC_CMD_DEST_TYPE_BIT)

#define APIC_CMD_VECTOR_n(n)         ((n) << APIC_CMD_VECTOR_BIT)
#define APIC_CMD_SIPI_PAGE_n(n)      ((n) << APIC_CMD_SIPI_PAGE_BIT)
#define APIC_CMD_DELIVERY_n(n)       ((n) << APIC_CMD_DELIVERY_BIT)
#define APIC_CMD_DEST_MODE_n(n)      ((n) << APIC_CMD_DEST_MODE_BIT)
#define APIC_CMD_PENDING_n(n)        ((n) << APIC_CMD_PENDING_BIT)
#define APIC_CMD_LEVEL_n(n)          ((n) << APIC_CMD_LEVEL_BIT)
#define APIC_CMD_ILD_n(n)            ((n) << APIC_CMD_ILD_BIT)
#define APIC_CMD_DEST_TYPE_n(n)      ((n) << APIC_CMD_DEST_TYPE_BIT)

#define APIC_CMD_VECTOR_GET(n) \
    (((n) >> APIC_CMD_VECTOR_BIT) & APIC_CMD_VECTOR_MASK)
#define APIC_CMD_SIPI_PAGE_GET(n) \
    (((n) >> APIC_CMD_SIPI_PAGE_BIT) & APIC_CMD_SIPI_PAGE_MASK)
#define APIC_CMD_DELIVERY_GET(n) \
    (((n) >> APIC_CMD_DELIVERY_BIT) & APIC_CMD_DELIVERY_MASK)
#define APIC_CMD_DEST_MODE_GET(n) \
    (((n) >> APIC_CMD_DEST_MODE_BIT) & APIC_CMD_DEST_MODE_MASK)
#define APIC_CMD_PENDING_GET(n) \
    (((n) >> APIC_CMD_PENDING_BIT) & APIC_CMD_PENDING_MASK)
#define APIC_CMD_LEVEL_GET(n) \
    (((n) >> APIC_CMD_LEVEL_BIT) & APIC_CMD_LEVEL_MASK)
#define APIC_CMD_ILD_GET(n) \
    (((n) >> APIC_CMD_ILD_BIT) & APIC_CMD_ILD_MASK)
#define APIC_CMD_DEST_TYPE_GET(n) \
    (((n) >> APIC_CMD_DEST_TYPE_BIT) & APIC_CMD_DEST_TYPE_MASK)

#define APIC_CMD_VECTOR_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_VECTOR) | APIC_CMD_VECTOR_n((n)))
#define APIC_CMD_SIPI_PAGE_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_SIPI_PAGE) | APIC_CMD_SIPI_PAGE_n((n)))
#define APIC_CMD_DELIVERY_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_DELIVERY) | APIC_CMD_DELIVERY_n((n)))
#define APIC_CMD_DEST_MODE_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_DEST_MODE) | APIC_CMD_DEST_MODE_n((n)))
#define APIC_CMD_PENDING_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_PENDING) | APIC_CMD_PENDING_n((n)))
#define APIC_CMD_LEVEL_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_LEVEL) | APIC_CMD_LEVEL_n((n)))
#define APIC_CMD_ILD_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_ILD) | APIC_CMD_ILD_n((n)))
#define APIC_CMD_DEST_TYPE_SET(r,n) \
    ((r) = ((r) & ~APIC_CMD_DEST_TYPE) | APIC_CMD_DEST_TYPE_n((n)))

// APIC_LVT

#define APIC_LVT_VECTOR_BIT                0
#define APIC_LVT_DELIVERY_BIT              8
#define APIC_LVT_DELIVERY_STATUS_BIT       12
#define APIC_LVT_LINTn_POLARITY_BIT        13
#define APIC_LVT_LINTn_REMOTEIRR_BIT       14
#define APIC_LVT_LINTn_LEVEL_BIT           15
#define APIC_LVT_MASK_BIT                  16
#define APIC_LVT_TR_MODE_BIT               17

#define APIC_LVT_VECTOR_BITS               8
#define APIC_LVT_DELIVERY_BITS             3
#define APIC_LVT_DELIVERY_STATUS_BITS      1
#define APIC_LVT_LINTn_POLARITY_BITS       1
#define APIC_LVT_LINTn_REMOTEIRR_BITS      1
#define APIC_LVT_LINTn_LEVEL_BITS          1
#define APIC_LVT_MASK_BITS                 1
#define APIC_LVT_TR_MODE_BITS              2
#define APIC_LVT_VECTOR_MASK               ((1U << APIC_LVT_VECTOR_BITS)-1)
#define APIC_LVT_DELIVERY_MASK             ((1U << APIC_LVT_DELIVERY_BITS)-1)
#define APIC_LVT_DELIVERY_STATUS_MASK \
    ((1U << APIC_LVT_DELIVERY_STATUS_BITS)-1)
#define APIC_LVT_LINTn_POLARITY_MASK \
    ((1U << APIC_LVT_LINTn_POLARITY_BITS)-1)
#define APIC_LVT_LINTn_REMOTEIRR_MASK \
    ((1U << APIC_LVT_LINTn_REMOTEIRR_BITS)-1)
#define APIC_LVT_LINTn_LEVEL_MASK \
    ((1U << APIC_LVT_LINTn_LEVEL_BITS)-1)
#define APIC_LVT_MASK_MASK                 ((1U << APIC_LVT_MASK_BITS)-1)
#define APIC_LVT_TR_MODE_MASK              ((1U << APIC_LVT_TR_MODE_BITS)-1)
#define APIC_LVT_VECTOR \
    (APIC_LVT_VECTOR_MASK << APIC_LVT_VECTOR_BIT)
#define APIC_LVT_DELIVERY \
    (APIC_LVT_DELIVERY_MASK << APIC_LVT_DELIVERY_BIT)
#define APIC_LVT_DELIVERY_STATUS \
    (APIC_LVT_DELIVERY_STATUS_MASK << APIC_LVT_DELIVERY_STATUS_BIT)
#define APIC_LVT_LINTn_POLARITY \
    (APIC_LVT_LINTn_POLARITY_MASK << APIC_LVT_LINTn_POLARITY_BIT)
#define APIC_LVT_LINTn_REMOTEIRR \
    (APIC_LVT_LINTn_REMOTEIRR_MASK << APIC_LVT_LINTn_REMOTEIRR_BIT)
#define APIC_LVT_LINTn_LEVEL \
    (APIC_LVT_LINTn_LEVEL_MASK << APIC_LVT_LINTn_LEVEL_BIT)
#define APIC_LVT_MASK \
    (APIC_LVT_MASK_MASK << APIC_LVT_MASK_BIT)
#define APIC_LVT_TR_MODE \
    (APIC_LVT_TR_MODE_MASK << APIC_LVT_TR_MODE_BIT)

#define APIC_LVT_VECTOR_n(n)               ((n) << APIC_LVT_VECTOR_BIT)
#define APIC_LVT_DELIVERY_n(n)             ((n) << APIC_LVT_DELIVERY_BIT)
#define APIC_LVT_DELIVERY_STATUS_n(n) \
    ((n) << APIC_LVT_DELIVERY_STATUS_BIT)
#define APIC_LVT_LINTn_POLARITY_n(n)       ((n) << APIC_LVT_LINTn_POLARITY_BIT)
#define APIC_LVT_LINTn_REMOTEIRR_n(n) \
    ((n) << APIC_LVT_LINTn_REMOTEIRR_BIT)
#define APIC_LVT_LINTn_LEVEL_n(n)          ((n) << APIC_LVT_LINTn_LEVEL_BIT)
#define APIC_LVT_MASK_n(n)                 ((n) << APIC_LVT_MASK_BIT)
#define APIC_LVT_TR_MODE_n(n)              ((n) << APIC_LVT_TR_MODE_BIT)

#define APIC_LVT_VECTOR_GET(n) \
    (((n) >> APIC_LVT_VECTOR_BIT) & APIC_LVT_VECTOR_MASK)
#define APIC_LVT_DELIVERY_GET(n) \
    (((n) >> APIC_LVT_DELIVERY_BIT) & APIC_LVT_DELIVERY_MASK)
#define APIC_LVT_DELIVERY_STATUS_GET(n) \
    (((n) >> APIC_LVT_DELIVERY_STATUS_BIT) & APIC_LVT_DELIVERY_STATUS_MASK)
#define APIC_LVT_LINTn_POLARITY_GET(n) \
    (((n) >> APIC_LVT_LINTn_POLARITY_BIT) & APIC_LVT_LINTn_POLARITY_MASK)
#define APIC_LVT_LINTn_REMOTEIRR_GET(n) \
    (((n) >> APIC_LVT_LINTn_REMOTEIRR_BIT) & APIC_LVT_LINTn_REMOTEIRR_MASK)
#define APIC_LVT_LINTn_LEVEL_GET(n) \
    (((n) >> APIC_LVT_LINTn_LEVEL_BIT) & APIC_LVT_LINTn_LEVEL_MASK)
#define APIC_LVT_MASK_GET(n) \
    (((n) >> APIC_LVT_MASK_BIT) & APIC_LVT_MASK_MASK)
#define APIC_LVT_TR_MODE_GET(n) \
    (((n) >> APIC_LVT_TR_MODE_BIT) & APIC_LVT_TR_MODE_MASK)

#define APIC_LVT_VECTOR_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_VECTOR) | APIC_LVT_VECTOR_n((n)))
#define APIC_LVT_DELIVERY_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_DELIVERY) | APIC_LVT_DELIVERY_n((n)))
#define APIC_LVT_DELIVERY_STATUS_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_DELIVERY_STATUS) | APIC_LVT_DELIVERY_STATUS_n((n)))
#define APIC_LVT_LINTn_POLARITY_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_LINTn_POLARITY) | APIC_LVT_LINTn_POLARITY_n((n)))
#define APIC_LVT_LINTn_REMOTEIRR_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_LINTn_REMOTEIRR) | APIC_LVT_LINTn_REMOTEIRR_n((n)))
#define APIC_LVT_LINTn_LEVEL_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_LINTn_LEVEL) | APIC_LVT_LINTn_LEVEL_n((n)))
#define APIC_LVT_MASK_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_MASK) | APIC_LVT_MASK_n((n)))
#define APIC_LVT_TR_MODE_SET(r,n) \
    ((r) = ((r) & ~APIC_LVT_TR_MODE) | APIC_LVT_TR_MODE_n((n)))

//
// APIC_ESR: Error status register

#define APIC_ESR_ILL_REG_BIT               7
#define APIC_ESR_RX_ILL_VEC_BIT            6
#define APIC_ESR_TX_ILL_VEC_BIT            5
#define APIC_ESR_REDIR_IPI_BIT             4
#define APIC_ESR_RX_ACCEPT_ERR_BIT         3
#define APIC_ESR_TX_ACCEPT_ERR_BIT         2
#define APIC_ESR_RX_CHECKSUM_ERR_BIT       1
#define APIC_ESR_TX_CHECKSUM_ERR_BIT       0

#define APIC_ESR_ILL_REG_BITS              1
#define APIC_ESR_RX_ILL_VEC_BITS           1
#define APIC_ESR_TX_ILL_VEC_BITS           1
#define APIC_ESR_REDIR_IPI_BITS            1
#define APIC_ESR_RX_ACCEPT_ERR_BITS        1
#define APIC_ESR_TX_ACCEPT_ERR_BITS        1
#define APIC_ESR_RX_CHECKSUM_ERR_BITS      1
#define APIC_ESR_TX_CHECKSUM_ERR_BITS      1
#define APIC_ESR_ILL_REG_MASK              ((1U << APIC_ESR_ILL_REG_BITS)-1)
#define APIC_ESR_RX_ILL_VEC_MASK           ((1U << APIC_ESR_RX_ILL_VEC_BITS)-1)
#define APIC_ESR_TX_ILL_VEC_MASK           ((1U << APIC_ESR_TX_ILL_VEC_BITS)-1)
#define APIC_ESR_REDIR_IPI_MASK            ((1U << APIC_ESR_REDIR_IPI_BITS)-1)
#define APIC_ESR_RX_ACCEPT_ERR_MASK \
    ((1U << APIC_ESR_RX_ACCEPT_ERR_BITS)-1)
#define APIC_ESR_TX_ACCEPT_ERR_MASK \
    ((1U << APIC_ESR_TX_ACCEPT_ERR_BITS)-1)
#define APIC_ESR_RX_CHECKSUM_ERR_MASK \
    ((1U << APIC_ESR_RX_CHECKSUM_ERR_BITS)-1)
#define APIC_ESR_TX_CHECKSUM_ERR_MASK \
    ((1U << APIC_ESR_TX_CHECKSUM_ERR_BITS)-1)

// Illegal register address (Core/P4/Xeon/P6 only)
#define APIC_ESR_ILL_REG \
    (APIC_ESR_ILL_REG_MASK << APIC_ESR_ILL_REG_BIT)

// Received illegal vector
#define APIC_ESR_RX_ILL_VEC \
    (APIC_ESR_RX_ILL_VEC_MASK << APIC_ESR_RX_ILL_VEC_BIT)

// Send illegal vector
#define APIC_ESR_TX_ILL_VEC \
    (APIC_ESR_TX_ILL_VEC_MASK << APIC_ESR_TX_ILL_VEC_BIT)

// Redirectable IPI (some processors)
#define APIC_ESR_REDIR_IPI \
    (APIC_ESR_REDIR_IPI_MASK << APIC_ESR_REDIR_IPI_BIT)

// Receive accept error (old processors)
#define APIC_ESR_RX_ACCEPT_ERR \
    (APIC_ESR_RX_ACCEPT_ERR_MASK << APIC_ESR_RX_ACCEPT_ERR_BIT)

// Send accept error (old processors)
#define APIC_ESR_TX_ACCEPT_ERR \
    (APIC_ESR_TX_ACCEPT_ERR_MASK << APIC_ESR_TX_ACCEPT_ERR_BIT)

// Receive checksum error (old processors)
#define APIC_ESR_RX_CHECKSUM_ERR \
    (APIC_ESR_RX_CHECKSUM_ERR_MASK << APIC_ESR_RX_CHECKSUM_ERR_BIT)

// Send checksum error (old processors)
#define APIC_ESR_TX_CHECKSUM_ERR \
    (APIC_ESR_TX_CHECKSUM_ERR_MASK << APIC_ESR_TX_CHECKSUM_ERR_BIT)

#define APIC_ESR_ILL_REG_n(n)              ((n) << APIC_ESR_ILL_REG_BIT)
#define APIC_ESR_RX_ILL_VEC_n(n)           ((n) << APIC_ESR_RX_ILL_VEC_BIT)
#define APIC_ESR_TX_ILL_VEC_n(n)           ((n) << APIC_ESR_TX_ILL_VEC_BIT)
#define APIC_ESR_REDIR_IPI_n(n)            ((n) << APIC_ESR_REDIR_IPI_BIT)
#define APIC_ESR_RX_ACCEPT_ERR_n(n)        ((n) << APIC_ESR_RX_ACCEPT_ERR_BIT)
#define APIC_ESR_TX_ACCEPT_ERR_n(n)        ((n) << APIC_ESR_TX_ACCEPT_ERR_BIT)
#define APIC_ESR_RX_CHECKSUM_ERR_n(n) \
    ((n) << APIC_ESR_RX_CHECKSUM_ERR_BIT)
#define APIC_ESR_TX_CHECKSUM_ERR_n(n) \
    ((n) << APIC_ESR_TX_CHECKSUM_ERR_BIT)

#define APIC_ESR_ILL_REG_GET(n) \
    (((n) >> APIC_ESR_ILL_REG_BIT) & APIC_ESR_ILL_REG_MASK)
#define APIC_ESR_RX_ILL_VEC_GET(n) \
    (((n) >> APIC_ESR_RX_ILL_VEC_BIT) & APIC_ESR_RX_ILL_VEC_MASK)
#define APIC_ESR_TX_ILL_VEC_GET(n) \
    (((n) >> APIC_ESR_TX_ILL_VEC_BIT) & APIC_ESR_TX_ILL_VEC_MASK)
#define APIC_ESR_REDIR_IPI_GET(n) \
    (((n) >> APIC_ESR_REDIR_IPI_BIT) & APIC_ESR_REDIR_IPI_MASK)
#define APIC_ESR_RX_ACCEPT_ERR_GET(n) \
    (((n) >> APIC_ESR_RX_ACCEPT_ERR_BIT) & APIC_ESR_RX_ACCEPT_ERR_MASK)
#define APIC_ESR_TX_ACCEPT_ERR_GET(n) \
    (((n) >> APIC_ESR_TX_ACCEPT_ERR_BIT) & APIC_ESR_TX_ACCEPT_ERR_MASK)
#define APIC_ESR_RX_CHECKSUM_ERR_GET(n) \
    (((n) >> APIC_ESR_RX_CHECKSUM_ERR_BIT) & APIC_ESR_RX_CHECKSUM_ERR_MASK)
#define APIC_ESR_TX_CHECKSUM_ERR_GET(n) \
    (((n) >> APIC_ESR_TX_CHECKSUM_ERR_BIT) & APIC_ESR_TX_CHECKSUM_ERR_MASK)

#define APIC_ESR_ILL_REG_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_ILL_REG) | APIC_ESR_ILL_REG_n((n)))
#define APIC_ESR_RX_ILL_VEC_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_RX_ILL_VEC) | APIC_ESR_RX_ILL_VEC_n((n)))
#define APIC_ESR_TX_ILL_VEC_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_TX_ILL_VEC) | APIC_ESR_TX_ILL_VEC_n((n)))
#define APIC_ESR_REDIR_IPI_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_REDIR_IPI) | APIC_ESR_REDIR_IPI_n((n)))
#define APIC_ESR_RX_ACCEPT_ERR_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_RX_ACCEPT_ERR) | APIC_ESR_RX_ACCEPT_ERR_n((n)))
#define APIC_ESR_TX_ACCEPT_ERR_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_TX_ACCEPT_ERR) | APIC_ESR_TX_ACCEPT_ERR_n((n)))
#define APIC_ESR_RX_CHECKSUM_ERR_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_RX_CHECKSUM_ERR) | APIC_ESR_RX_CHECKSUM_ERR_n((n)))
#define APIC_ESR_TX_CHECKSUM_ERR_SET(r,n) \
    ((r) = ((r) & ~APIC_ESR_TX_CHECKSUM_ERR) | APIC_ESR_TX_CHECKSUM_ERR_n((n)))

//
// APIC_SIR: Spurious interrupt register

#define APIC_SIR_VECTOR_BIT             0
#define APIC_SIR_APIC_ENABLE_BIT        8
#define APIC_SIR_NO_FOCUS_CHK_BIT       9
#define APIC_SIR_NO_EOI_BCAST_BIT       12

#define APIC_SIR_VECTOR_BITS            8
#define APIC_SIR_APIC_ENABLE_BITS       1
#define APIC_SIR_NO_FOCUS_CHK_BITS      1
#define APIC_SIR_NO_EOI_BCAST_BITS      1
#define APIC_SIR_VECTOR_MASK            ((1U << APIC_SIR_VECTOR_BITS)-1)
#define APIC_SIR_APIC_ENABLE_MASK       ((1U << APIC_SIR_APIC_ENABLE_BITS)-1)
#define APIC_SIR_NO_FOCUS_CHK_MASK      ((1U << APIC_SIR_NO_FOCUS_CHK_BITS)-1)
#define APIC_SIR_NO_EOI_BCAST_MASK      ((1U << APIC_SIR_NO_EOI_BCAST_BITS)-1)

// Spurious interrupt vector
#define APIC_SIR_VECTOR \
    (APIC_SIR_VECTOR_MASK << APIC_SIR_VECTOR_BIT)

// 1=enable
#define APIC_SIR_APIC_ENABLE \
    (APIC_SIR_APIC_ENABLE_MASK << APIC_SIR_APIC_ENABLE_BIT)

// 0=enable focus processor checking
#define APIC_SIR_NO_FOCUS_CHK \
    (APIC_SIR_NO_FOCUS_CHK_MASK << APIC_SIR_NO_FOCUS_CHK_BIT)

// 0=enable EOI broadcast to IOAPICs
#define APIC_SIR_NO_EOI_BCAST \
    (APIC_SIR_NO_EOI_BCAST_MASK << APIC_SIR_NO_EOI_BCAST_BIT)

#define APIC_SIR_VECTOR_n(n)            ((n) << APIC_SIR_VECTOR_BIT)
#define APIC_SIR_APIC_ENABLE_n(n)       ((n) << APIC_SIR_APIC_ENABLE_BIT)
#define APIC_SIR_NO_FOCUS_CHK_n(n)      ((n) << APIC_SIR_NO_FOCUS_CHK_BIT)
#define APIC_SIR_NO_EOI_BCAST_n(n)      ((n) << APIC_SIR_NO_EOI_BCAST_BIT)

#define APIC_SIR_VECTOR_GET(n) \
    (((n) >> APIC_SIR_VECTOR_BIT) & APIC_SIR_VECTOR_MASK)
#define APIC_SIR_APIC_ENABLE_GET(n) \
    (((n) >> APIC_SIR_APIC_ENABLE_BIT) & APIC_SIR_APIC_ENABLE_MASK)
#define APIC_SIR_NO_FOCUS_CHK_GET(n) \
    (((n) >> APIC_SIR_NO_FOCUS_CHK_BIT) & APIC_SIR_NO_FOCUS_CHK_MASK)
#define APIC_SIR_NO_EOI_BCAST_GET(n) \
    (((n) >> APIC_SIR_NO_EOI_BCAST_BIT) & APIC_SIR_NO_EOI_BCAST_MASK)

#define APIC_SIR_VECTOR_SET(r,n) \
    ((r) = ((r) & ~APIC_SIR_VECTOR) | APIC_SIR_VECTOR_n((n)))
#define APIC_SIR_APIC_ENABLE_SET(r,n) \
    ((r) = ((r) & ~APIC_SIR_APIC_ENABLE) | APIC_SIR_APIC_ENABLE_n((n)))
#define APIC_SIR_NO_FOCUS_CHK_SET(r,n) \
    ((r) = ((r) & ~APIC_SIR_NO_FOCUS_CHK) | APIC_SIR_NO_FOCUS_CHK_n((n)))
#define APIC_SIR_NO_EOI_BCAST_SET(r,n) \
    ((r) = ((r) & ~APIC_SIR_NO_EOI_BCAST) | APIC_SIR_NO_EOI_BCAST_n((n)))

//
// ACPI_FADT_FFF: FADT Fixed Feature Flags

#define ACPI_FADT_FFF_WBINVD_BIT                      0
#define ACPI_FADT_FFF_WBINVD_FLUSH_BIT                1
#define ACPI_FADT_FFF_PROC_C1_BIT                     2
#define ACPI_FADT_FFF_P_LVL2_MP_BIT                   3
#define ACPI_FADT_FFF_PWR_BUTTON_BIT                  4
#define ACPI_FADT_FFF_SLP_BUTTON_BIT                  5
#define ACPI_FADT_FFF_FIX_RTC_BIT                     6
#define ACPI_FADT_FFF_RTC_S4_BIT                      7
#define ACPI_FADT_FFF_TMR_VAL_EXT_BIT                 8
#define ACPI_FADT_FFF_DCK_CAP_BIT                     9
#define ACPI_FADT_FFF_RESET_REG_SUP_BIT               10
#define ACPI_FADT_FFF_SEALED_CASE_BIT                 11
#define ACPI_FADT_FFF_HEADLESS_BIT                    12
#define ACPI_FADT_FFF_CPU_SW_SLP_BIT                  13
#define ACPI_FADT_FFF_PCI_EXP_WAK_BIT                 14
#define ACPI_FADT_FFF_PLAT_CLOCK_BIT                  15
#define ACPI_FADT_FFF_S4_RTC_STS_BIT                  16
#define ACPI_FADT_FFF_REMOTE_ON_CAP_BIT               17
#define ACPI_FADT_FFF_FORCE_CLUSTER_BIT               18
#define ACPI_FADT_FFF_FORCE_PHYS_BIT                  19
#define ACPI_FADT_FFF_HW_REDUCED_ACPI_BIT             20
#define ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_BIT       21

#define ACPI_FADT_FFF_WBINVD_BITS                     1
#define ACPI_FADT_FFF_WBINVD_FLUSH_BITS               1
#define ACPI_FADT_FFF_PROC_C1_BITS                    1
#define ACPI_FADT_FFF_P_LVL2_MP_BITS                  1
#define ACPI_FADT_FFF_PWR_BUTTON_BITS                 1
#define ACPI_FADT_FFF_SLP_BUTTON_BITS                 1
#define ACPI_FADT_FFF_FIX_RTC_BITS                    1
#define ACPI_FADT_FFF_RTC_S4_BITS                     1
#define ACPI_FADT_FFF_TMR_VAL_EXT_BITS                1
#define ACPI_FADT_FFF_DCK_CAP_BITS                    1
#define ACPI_FADT_FFF_RESET_REG_SUP_BITS              1
#define ACPI_FADT_FFF_SEALED_CASE_BITS                1
#define ACPI_FADT_FFF_HEADLESS_BITS                   1
#define ACPI_FADT_FFF_CPU_SW_SLP_BITS                 1
#define ACPI_FADT_FFF_PCI_EXP_WAK_BITS                1
#define ACPI_FADT_FFF_PLAT_CLOCK_BITS                 1
#define ACPI_FADT_FFF_S4_RTC_STS_BITS                 1
#define ACPI_FADT_FFF_REMOTE_ON_CAP_BITS              1
#define ACPI_FADT_FFF_FORCE_CLUSTER_BITS              1
#define ACPI_FADT_FFF_FORCE_PHYS_BITS                 1
#define ACPI_FADT_FFF_HW_REDUCED_ACPI_BITS            1
#define ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_BITS      1
#define ACPI_FADT_FFF_WBINVD_MASK \
    ((1U << ACPI_FADT_FFF_WBINVD_BITS)-1)
#define ACPI_FADT_FFF_WBINVD_FLUSH_MASK \
    ((1U << ACPI_FADT_FFF_WBINVD_FLUSH_BITS)-1)
#define ACPI_FADT_FFF_PROC_C1_MASK \
    ((1U << ACPI_FADT_FFF_PROC_C1_BITS)-1)
#define ACPI_FADT_FFF_P_LVL2_MP_MASK \
    ((1U << ACPI_FADT_FFF_P_LVL2_MP_BITS)-1)
#define ACPI_FADT_FFF_PWR_BUTTON_MASK \
    ((1U << ACPI_FADT_FFF_PWR_BUTTON_BITS)-1)
#define ACPI_FADT_FFF_SLP_BUTTON_MASK \
    ((1U << ACPI_FADT_FFF_SLP_BUTTON_BITS)-1)
#define ACPI_FADT_FFF_FIX_RTC_MASK \
    ((1U << ACPI_FADT_FFF_FIX_RTC_BITS)-1)
#define ACPI_FADT_FFF_RTC_S4_MASK \
    ((1U << ACPI_FADT_FFF_RTC_S4_BITS)-1)
#define ACPI_FADT_FFF_TMR_VAL_EXT_MASK \
    ((1U << ACPI_FADT_FFF_TMR_VAL_EXT_BITS)-1)
#define ACPI_FADT_FFF_DCK_CAP_MASK \
    ((1U << ACPI_FADT_FFF_DCK_CAP_BITS)-1)
#define ACPI_FADT_FFF_RESET_REG_SUP_MASK \
    ((1U << ACPI_FADT_FFF_RESET_REG_SUP_BITS)-1)
#define ACPI_FADT_FFF_SEALED_CASE_MASK \
    ((1U << ACPI_FADT_FFF_SEALED_CASE_BITS)-1)
#define ACPI_FADT_FFF_HEADLESS_MASK \
    ((1U << ACPI_FADT_FFF_HEADLESS_BITS)-1)
#define ACPI_FADT_FFF_CPU_SW_SLP_MASK \
    ((1U << ACPI_FADT_FFF_CPU_SW_SLP_BITS)-1)
#define ACPI_FADT_FFF_PCI_EXP_WAK_MASK \
    ((1U << ACPI_FADT_FFF_PCI_EXP_WAK_BITS)-1)
#define ACPI_FADT_FFF_PLAT_CLOCK_MASK \
    ((1U << ACPI_FADT_FFF_PLAT_CLOCK_BITS)-1)
#define ACPI_FADT_FFF_S4_RTC_STS_MASK \
    ((1U << ACPI_FADT_FFF_S4_RTC_STS_BITS)-1)
#define ACPI_FADT_FFF_REMOTE_ON_CAP_MASK \
    ((1U << ACPI_FADT_FFF_REMOTE_ON_CAP_BITS)-1)
#define ACPI_FADT_FFF_FORCE_CLUSTER_MASK \
    ((1U << ACPI_FADT_FFF_FORCE_CLUSTER_BITS)-1)
#define ACPI_FADT_FFF_FORCE_PHYS_MASK \
    ((1U << ACPI_FADT_FFF_FORCE_PHYS_BITS)-1)
#define ACPI_FADT_FFF_HW_REDUCED_ACPI_MASK \
    ((1U << ACPI_FADT_FFF_HW_REDUCED_ACPI_BITS)-1)
#define ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_MASK \
    ((1U << ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_BITS)-1)

// The WBINVD instruction works correctly
#define ACPI_FADT_FFF_WBINVD \
    (ACPI_FADT_FFF_WBINVD_MASK << ACPI_FADT_FFF_WBINVD_BIT)

// The WBINVD instruction does not invalidate the caches
#define ACPI_FADT_FFF_WBINVD_FLUSH \
    (ACPI_FADT_FFF_WBINVD_FLUSH_MASK << ACPI_FADT_FFF_WBINVD_FLUSH_BIT)

// The C1 state is supported on all processors
#define ACPI_FADT_FFF_PROC_C1 \
    (ACPI_FADT_FFF_PROC_C1_MASK << ACPI_FADT_FFF_PROC_C1_BIT)

// The C2 state works with multiple processors
#define ACPI_FADT_FFF_P_LVL2_MP \
    (ACPI_FADT_FFF_P_LVL2_MP_MASK << ACPI_FADT_FFF_P_LVL2_MP_BIT)

// Power button: 0=fixed feature, 1=control method
#define ACPI_FADT_FFF_PWR_BUTTON \
    (ACPI_FADT_FFF_PWR_BUTTON_MASK << ACPI_FADT_FFF_PWR_BUTTON_BIT)

// Sleep button: 0=fixed feature, 1=control method
#define ACPI_FADT_FFF_SLP_BUTTON \
    (ACPI_FADT_FFF_SLP_BUTTON_MASK << ACPI_FADT_FFF_SLP_BUTTON_BIT)

// RTC wake: 0=fixed feature, 1=not fixed feature
#define ACPI_FADT_FFF_FIX_RTC \
    (ACPI_FADT_FFF_FIX_RTC_MASK << ACPI_FADT_FFF_FIX_RTC_BIT)

// RTC can wake from S4 state
#define ACPI_FADT_FFF_RTC_S4 \
    (ACPI_FADT_FFF_RTC_S4_MASK << ACPI_FADT_FFF_RTC_S4_BIT)

// Timer width: 0=24 bit, 1=32 bit
#define ACPI_FADT_FFF_TMR_VAL_EXT \
    (ACPI_FADT_FFF_TMR_VAL_EXT_MASK << ACPI_FADT_FFF_TMR_VAL_EXT_BIT)

// Docking capable
#define ACPI_FADT_FFF_DCK_CAP \
    (ACPI_FADT_FFF_DCK_CAP_MASK << ACPI_FADT_FFF_DCK_CAP_BIT)

// FADT RESET_REG support: 1=supported
#define ACPI_FADT_FFF_RESET_REG_SUP \
    (ACPI_FADT_FFF_RESET_REG_SUP_MASK << ACPI_FADT_FFF_RESET_REG_SUP_BIT)

// No internal expansion capabilities
#define ACPI_FADT_FFF_SEALED_CASE \
    (ACPI_FADT_FFF_SEALED_CASE_MASK << ACPI_FADT_FFF_SEALED_CASE_BIT)

// Cannot detect monitor/keyboard devices
#define ACPI_FADT_FFF_HEADLESS \
    (ACPI_FADT_FFF_HEADLESS_MASK << ACPI_FADT_FFF_HEADLESS_BIT)

// A native instruction must be executed after writing SLP_TYPx
#define ACPI_FADT_FFF_CPU_SW_SLP \
    (ACPI_FADT_FFF_CPU_SW_SLP_MASK << ACPI_FADT_FFF_CPU_SW_SLP_BIT)

// Supports PCI express wake PCIEXP_WAKE_STS/_EN
#define ACPI_FADT_FFF_PCI_EXP_WAK \
    (ACPI_FADT_FFF_PCI_EXP_WAK_MASK << ACPI_FADT_FFF_PCI_EXP_WAK_BIT)

// Use platform clock - long confusing explanation in spec
#define ACPI_FADT_FFF_PLAT_CLOCK \
    (ACPI_FADT_FFF_PLAT_CLOCK_MASK << ACPI_FADT_FFF_PLAT_CLOCK_BIT)

// System has RTC_STS errata when walking from S4
#define ACPI_FADT_FFF_S4_RTC_STS \
    (ACPI_FADT_FFF_S4_RTC_STS_MASK << ACPI_FADT_FFF_S4_RTC_STS_BIT)

// Remote power on capable
#define ACPI_FADT_FFF_REMOTE_ON_CAP \
    (ACPI_FADT_FFF_REMOTE_ON_CAP_MASK << ACPI_FADT_FFF_REMOTE_ON_CAP_BIT)

// Force APIC to use cluster destination mode
#define ACPI_FADT_FFF_FORCE_CLUSTER \
    (ACPI_FADT_FFF_FORCE_CLUSTER_MASK << ACPI_FADT_FFF_FORCE_CLUSTER_BIT)

// Force xAPIC to use physical destination mode (N/A to APIC)
#define ACPI_FADT_FFF_FORCE_PHYS \
    (ACPI_FADT_FFF_FORCE_PHYS_MASK << ACPI_FADT_FFF_FORCE_PHYS_BIT)

// ACPI hardware interface is not supported
#define ACPI_FADT_FFF_HW_REDUCED_ACPI \
    (ACPI_FADT_FFF_HW_REDUCED_ACPI_MASK << ACPI_FADT_FFF_HW_REDUCED_ACPI_BIT)

// System power saving in S0 is as good as typical S3
#define ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT \
    (ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_MASK \
    << ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_BIT)

#define ACPI_FADT_FFF_WBINVD_n(n) \
    ((n) << ACPI_FADT_FFF_WBINVD_BIT)
#define ACPI_FADT_FFF_WBINVD_FLUSH_n(n) \
    ((n) << ACPI_FADT_FFF_WBINVD_FLUSH_BIT)
#define ACPI_FADT_FFF_PROC_C1_n(n) \
    ((n) << ACPI_FADT_FFF_PROC_C1_BIT)
#define ACPI_FADT_FFF_P_LVL2_MP_n(n) \
    ((n) << ACPI_FADT_FFF_P_LVL2_MP_BIT)
#define ACPI_FADT_FFF_PWR_BUTTON_n(n) \
    ((n) << ACPI_FADT_FFF_PWR_BUTTON_BIT)
#define ACPI_FADT_FFF_SLP_BUTTON_n(n) \
    ((n) << ACPI_FADT_FFF_SLP_BUTTON_BIT)
#define ACPI_FADT_FFF_FIX_RTC_n(n) \
    ((n) << ACPI_FADT_FFF_FIX_RTC_BIT)
#define ACPI_FADT_FFF_RTC_S4_n(n) \
    ((n) << ACPI_FADT_FFF_RTC_S4_BIT)
#define ACPI_FADT_FFF_TMR_VAL_EXT_n(n) \
    ((n) << ACPI_FADT_FFF_TMR_VAL_EXT_BIT)
#define ACPI_FADT_FFF_DCK_CAP_n(n) \
    ((n) << ACPI_FADT_FFF_DCK_CAP_BIT)
#define ACPI_FADT_FFF_RESET_REG_SUP_n(n) \
    ((n) << ACPI_FADT_FFF_RESET_REG_SUP_BIT)
#define ACPI_FADT_FFF_SEALED_CASE_n(n) \
    ((n) << ACPI_FADT_FFF_SEALED_CASE_BIT)
#define ACPI_FADT_FFF_HEADLESS_n(n) \
    ((n) << ACPI_FADT_FFF_HEADLESS_BIT)
#define ACPI_FADT_FFF_CPU_SW_SLP_n(n) \
    ((n) << ACPI_FADT_FFF_CPU_SW_SLP_BIT)
#define ACPI_FADT_FFF_PCI_EXP_WAK_n(n) \
    ((n) << ACPI_FADT_FFF_PCI_EXP_WAK_BIT)
#define ACPI_FADT_FFF_PLAT_CLOCK_n(n) \
    ((n) << ACPI_FADT_FFF_PLAT_CLOCK_BIT)
#define ACPI_FADT_FFF_S4_RTC_STS_n(n) \
    ((n) << ACPI_FADT_FFF_S4_RTC_STS_BIT)
#define ACPI_FADT_FFF_REMOTE_ON_CAP_n(n) \
    ((n) << ACPI_FADT_FFF_REMOTE_ON_CAP_BIT)
#define ACPI_FADT_FFF_FORCE_CLUSTER_n(n) \
    ((n) << ACPI_FADT_FFF_FORCE_CLUSTER_BIT)
#define ACPI_FADT_FFF_FORCE_PHYS_n(n) \
    ((n) << ACPI_FADT_FFF_FORCE_PHYS_BIT)
#define ACPI_FADT_FFF_HW_REDUCED_ACPI_n(n) \
    ((n) << ACPI_FADT_FFF_HW_REDUCED_ACPI_BIT)
#define ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_n(n) \
    ((n) << ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_BIT)

#define ACPI_FADT_FFF_WBINVD_GET(n) \
    (((n) >> ACPI_FADT_FFF_WBINVD_BIT) & ACPI_FADT_FFF_WBINVD_MASK)
#define ACPI_FADT_FFF_WBINVD_FLUSH_GET(n) \
    (((n) >> ACPI_FADT_FFF_WBINVD_FLUSH_BIT) & ACPI_FADT_FFF_WBINVD_FLUSH_MASK)
#define ACPI_FADT_FFF_PROC_C1_GET(n) \
    (((n) >> ACPI_FADT_FFF_PROC_C1_BIT) & ACPI_FADT_FFF_PROC_C1_MASK)
#define ACPI_FADT_FFF_P_LVL2_MP_GET(n) \
    (((n) >> ACPI_FADT_FFF_P_LVL2_MP_BIT) & ACPI_FADT_FFF_P_LVL2_MP_MASK)
#define ACPI_FADT_FFF_PWR_BUTTON_GET(n) \
    (((n) >> ACPI_FADT_FFF_PWR_BUTTON_BIT) & ACPI_FADT_FFF_PWR_BUTTON_MASK)
#define ACPI_FADT_FFF_SLP_BUTTON_GET(n) \
    (((n) >> ACPI_FADT_FFF_SLP_BUTTON_BIT) & ACPI_FADT_FFF_SLP_BUTTON_MASK)
#define ACPI_FADT_FFF_FIX_RTC_GET(n) \
    (((n) >> ACPI_FADT_FFF_FIX_RTC_BIT) & ACPI_FADT_FFF_FIX_RTC_MASK)
#define ACPI_FADT_FFF_RTC_S4_GET(n) \
    (((n) >> ACPI_FADT_FFF_RTC_S4_BIT) & ACPI_FADT_FFF_RTC_S4_MASK)
#define ACPI_FADT_FFF_TMR_VAL_EXT_GET(n) \
    (((n) >> ACPI_FADT_FFF_TMR_VAL_EXT_BIT) & ACPI_FADT_FFF_TMR_VAL_EXT_MASK)
#define ACPI_FADT_FFF_DCK_CAP_GET(n) \
    (((n) >> ACPI_FADT_FFF_DCK_CAP_BIT) & ACPI_FADT_FFF_DCK_CAP_MASK)
#define ACPI_FADT_FFF_RESET_REG_SUP_GET(n)            (((n) \
    >> ACPI_FADT_FFF_RESET_REG_SUP_BIT) & ACPI_FADT_FFF_RESET_REG_SUP_MASK)
#define ACPI_FADT_FFF_SEALED_CASE_GET(n) \
    (((n) >> ACPI_FADT_FFF_SEALED_CASE_BIT) & ACPI_FADT_FFF_SEALED_CASE_MASK)
#define ACPI_FADT_FFF_HEADLESS_GET(n) \
    (((n) >> ACPI_FADT_FFF_HEADLESS_BIT) & ACPI_FADT_FFF_HEADLESS_MASK)
#define ACPI_FADT_FFF_CPU_SW_SLP_GET(n) \
    (((n) >> ACPI_FADT_FFF_CPU_SW_SLP_BIT) & ACPI_FADT_FFF_CPU_SW_SLP_MASK)
#define ACPI_FADT_FFF_PCI_EXP_WAK_GET(n) \
    (((n) >> ACPI_FADT_FFF_PCI_EXP_WAK_BIT) & ACPI_FADT_FFF_PCI_EXP_WAK_MASK)
#define ACPI_FADT_FFF_PLAT_CLOCK_GET(n) \
    (((n) >> ACPI_FADT_FFF_PLAT_CLOCK_BIT) & ACPI_FADT_FFF_PLAT_CLOCK_MASK)
#define ACPI_FADT_FFF_S4_RTC_STS_GET(n) \
    (((n) >> ACPI_FADT_FFF_S4_RTC_STS_BIT) & ACPI_FADT_FFF_S4_RTC_STS_MASK)
#define ACPI_FADT_FFF_REMOTE_ON_CAP_GET(n)            (((n) \
    >> ACPI_FADT_FFF_REMOTE_ON_CAP_BIT) & ACPI_FADT_FFF_REMOTE_ON_CAP_MASK)
#define ACPI_FADT_FFF_FORCE_CLUSTER_GET(n)            (((n) \
    >> ACPI_FADT_FFF_FORCE_CLUSTER_BIT) & ACPI_FADT_FFF_FORCE_CLUSTER_MASK)
#define ACPI_FADT_FFF_FORCE_PHYS_GET(n) \
    (((n) >> ACPI_FADT_FFF_FORCE_PHYS_BIT) & ACPI_FADT_FFF_FORCE_PHYS_MASK)
#define ACPI_FADT_FFF_HW_REDUCED_ACPI_GET(n)          (((n) \
    >> ACPI_FADT_FFF_HW_REDUCED_ACPI_BIT) & ACPI_FADT_FFF_HW_REDUCED_ACPI_MASK)
#define ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_GET(n) \
    (((n) >> ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_BIT) \
    & ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_MASK)

#define ACPI_FADT_FFF_WBINVD_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_WBINVD) | ACPI_FADT_FFF_WBINVD_n((n)))
#define ACPI_FADT_FFF_WBINVD_FLUSH_SET(r,n)           ((r) \
    = ((r) & ~ACPI_FADT_FFF_WBINVD_FLUSH) | ACPI_FADT_FFF_WBINVD_FLUSH_n((n)))
#define ACPI_FADT_FFF_PROC_C1_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_PROC_C1) | ACPI_FADT_FFF_PROC_C1_n((n)))
#define ACPI_FADT_FFF_P_LVL2_MP_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_P_LVL2_MP) | ACPI_FADT_FFF_P_LVL2_MP_n((n)))
#define ACPI_FADT_FFF_PWR_BUTTON_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_PWR_BUTTON) | ACPI_FADT_FFF_PWR_BUTTON_n((n)))
#define ACPI_FADT_FFF_SLP_BUTTON_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_SLP_BUTTON) | ACPI_FADT_FFF_SLP_BUTTON_n((n)))
#define ACPI_FADT_FFF_FIX_RTC_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_FIX_RTC) | ACPI_FADT_FFF_FIX_RTC_n((n)))
#define ACPI_FADT_FFF_RTC_S4_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_RTC_S4) | ACPI_FADT_FFF_RTC_S4_n((n)))
#define ACPI_FADT_FFF_TMR_VAL_EXT_SET(r,n)            ((r) \
    = ((r) & ~ACPI_FADT_FFF_TMR_VAL_EXT) | ACPI_FADT_FFF_TMR_VAL_EXT_n((n)))
#define ACPI_FADT_FFF_DCK_CAP_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_DCK_CAP) | ACPI_FADT_FFF_DCK_CAP_n((n)))
#define ACPI_FADT_FFF_RESET_REG_SUP_SET(r,n)          ((r) = \
    ((r) & ~ACPI_FADT_FFF_RESET_REG_SUP) | ACPI_FADT_FFF_RESET_REG_SUP_n((n)))
#define ACPI_FADT_FFF_SEALED_CASE_SET(r,n)            ((r) \
    = ((r) & ~ACPI_FADT_FFF_SEALED_CASE) | ACPI_FADT_FFF_SEALED_CASE_n((n)))
#define ACPI_FADT_FFF_HEADLESS_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_HEADLESS) | ACPI_FADT_FFF_HEADLESS_n((n)))
#define ACPI_FADT_FFF_CPU_SW_SLP_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_CPU_SW_SLP) | ACPI_FADT_FFF_CPU_SW_SLP_n((n)))
#define ACPI_FADT_FFF_PCI_EXP_WAK_SET(r,n)            ((r) \
    = ((r) & ~ACPI_FADT_FFF_PCI_EXP_WAK) | ACPI_FADT_FFF_PCI_EXP_WAK_n((n)))
#define ACPI_FADT_FFF_PLAT_CLOCK_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_PLAT_CLOCK) | ACPI_FADT_FFF_PLAT_CLOCK_n((n)))
#define ACPI_FADT_FFF_S4_RTC_STS_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_S4_RTC_STS) | ACPI_FADT_FFF_S4_RTC_STS_n((n)))
#define ACPI_FADT_FFF_REMOTE_ON_CAP_SET(r,n)          ((r) = \
    ((r) & ~ACPI_FADT_FFF_REMOTE_ON_CAP) | ACPI_FADT_FFF_REMOTE_ON_CAP_n((n)))
#define ACPI_FADT_FFF_FORCE_CLUSTER_SET(r,n)          ((r) = \
    ((r) & ~ACPI_FADT_FFF_FORCE_CLUSTER) | ACPI_FADT_FFF_FORCE_CLUSTER_n((n)))
#define ACPI_FADT_FFF_FORCE_PHYS_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_FORCE_PHYS) | ACPI_FADT_FFF_FORCE_PHYS_n((n)))
#define ACPI_FADT_FFF_HW_REDUCED_ACPI_SET(r,n)        ((r) = ((r) \
    & ~ACPI_FADT_FFF_HW_REDUCED_ACPI) | ACPI_FADT_FFF_HW_REDUCED_ACPI_n((n)))
#define ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_SET(r,n) \
    ((r) = ((r) & ~ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT) \
    | ACPI_FADT_FFF_LOW_POWER_S0_IDLE_BIT_n((n)))

// ACPI_MADT_FLAGS

#define ACPI_MADT_FLAGS_HAVE_PIC_BIT       0

#define ACPI_MADT_FLAGS_HAVE_PIC_BITS      1
#define ACPI_MADT_FLAGS_HAVE_PIC_MASK \
    ((1U << ACPI_MADT_FLAGS_HAVE_PIC_BITS)-1)

// Dual 8259 PIC present
#define ACPI_MADT_FLAGS_HAVE_PIC \
    (ACPI_MADT_FLAGS_HAVE_PIC_MASK << ACPI_MADT_FLAGS_HAVE_PIC_BIT)

#define ACPI_MADT_FLAGS_HAVE_PIC_n(n) \
    ((n) << ACPI_MADT_FLAGS_HAVE_PIC_BIT)

#define ACPI_MADT_FLAGS_HAVE_PIC_GET(n) \
    (((n) >> ACPI_MADT_FLAGS_HAVE_PIC_BIT) & ACPI_MADT_FLAGS_HAVE_PIC_MASK)

#define ACPI_MADT_FLAGS_HAVE_PIC_SET(r,n) \
    ((r) = ((r) & ~ACPI_MADT_FLAGS_HAVE_PIC) | ACPI_MADT_FLAGS_HAVE_PIC_n((n)))

// ACPI_HPET_BLKID

#define ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_BIT       32
#define ACPI_HPET_BLKID_PCI_VEN_BIT                  16
#define ACPI_HPET_BLKID_LEGACY_CAP_BIT               15
#define ACPI_HPET_BLKID_COUNTER_SZ_BIT               13
#define ACPI_HPET_BLKID_NUM_TIM_CMP_BIT              8
#define ACPI_HPET_BLKID_REV_ID_BIT                   0

#define ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_BITS      32
#define ACPI_HPET_BLKID_PCI_VEN_BITS                 16
#define ACPI_HPET_BLKID_LEGACY_CAP_BITS              1
#define ACPI_HPET_BLKID_COUNTER_SZ_BITS              1
#define ACPI_HPET_BLKID_NUM_TIM_CMP_BITS             5
#define ACPI_HPET_BLKID_REV_ID_BITS                  8
#define ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_MASK \
    ((1UL << ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_BITS)-1)
#define ACPI_HPET_BLKID_PCI_VEN_MASK \
    ((1UL << ACPI_HPET_BLKID_PCI_VEN_BITS)-1)
#define ACPI_HPET_BLKID_LEGACY_CAP_MASK \
    ((1UL << ACPI_HPET_BLKID_LEGACY_CAP_BITS)-1)
#define ACPI_HPET_BLKID_COUNTER_SZ_MASK \
    ((1UL << ACPI_HPET_BLKID_COUNTER_SZ_BITS)-1)
#define ACPI_HPET_BLKID_NUM_TIM_CMP_MASK \
    ((1UL << ACPI_HPET_BLKID_NUM_TIM_CMP_BITS)-1)
#define ACPI_HPET_BLKID_REV_ID_MASK \
    ((1UL << ACPI_HPET_BLKID_REV_ID_BITS)-1)
#define ACPI_HPET_BLKID_COUNTER_CLK_PERIOD \
    (ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_MASK \
    << ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_BIT)

// PCI vendor ID
#define ACPI_HPET_BLKID_PCI_VEN \
    (ACPI_HPET_BLKID_PCI_VEN_MASK << ACPI_HPET_BLKID_PCI_VEN_BIT)

// LegacyReplacement IRQ routing capable
#define ACPI_HPET_BLKID_LEGACY_CAP \
    (ACPI_HPET_BLKID_LEGACY_CAP_MASK << ACPI_HPET_BLKID_LEGACY_CAP_BIT)

// 64-bit counters
#define ACPI_HPET_BLKID_COUNTER_SZ \
    (ACPI_HPET_BLKID_COUNTER_SZ_MASK << ACPI_HPET_BLKID_COUNTER_SZ_BIT)

// Number of comparators in 1st block
#define ACPI_HPET_BLKID_NUM_TIM_CMP \
    (ACPI_HPET_BLKID_NUM_TIM_CMP_MASK << ACPI_HPET_BLKID_NUM_TIM_CMP_BIT)
#define ACPI_HPET_BLKID_REV_ID \
    (ACPI_HPET_BLKID_REV_ID_MASK << ACPI_HPET_BLKID_REV_ID_BIT)

#define ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_n(n) \
    (uint64_t(n) << ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_BIT)
#define ACPI_HPET_BLKID_PCI_VEN_n(n) \
    (uint64_t(n) << ACPI_HPET_BLKID_PCI_VEN_BIT)
#define ACPI_HPET_BLKID_LEGACY_CAP_n(n) \
    (uint64_t(n) << ACPI_HPET_BLKID_LEGACY_CAP_BIT)
#define ACPI_HPET_BLKID_COUNTER_SZ_n(n) \
    (uint64_t(n) << ACPI_HPET_BLKID_COUNTER_SZ_BIT)
#define ACPI_HPET_BLKID_NUM_TIM_CMP_n(n) \
    (uint64_t(n) << ACPI_HPET_BLKID_NUM_TIM_CMP_BIT)
#define ACPI_HPET_BLKID_REV_ID_n(n) \
    (uint64_t(n) << ACPI_HPET_BLKID_REV_ID_BIT)

#define ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_GET(n) \
    (((n) >> ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_BIT) \
    & ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_MASK)
#define ACPI_HPET_BLKID_PCI_VEN_GET(n) \
    (((n) >> ACPI_HPET_BLKID_PCI_VEN_BIT) & ACPI_HPET_BLKID_PCI_VEN_MASK)
#define ACPI_HPET_BLKID_LEGACY_CAP_GET(n) \
    (((n) >> ACPI_HPET_BLKID_LEGACY_CAP_BIT) & ACPI_HPET_BLKID_LEGACY_CAP_MASK)
#define ACPI_HPET_BLKID_COUNTER_SZ_GET(n) \
    (((n) >> ACPI_HPET_BLKID_COUNTER_SZ_BIT) & ACPI_HPET_BLKID_COUNTER_SZ_MASK)
#define ACPI_HPET_BLKID_NUM_TIM_CMP_GET(n)           (((n) \
    >> ACPI_HPET_BLKID_NUM_TIM_CMP_BIT) & ACPI_HPET_BLKID_NUM_TIM_CMP_MASK)
#define ACPI_HPET_BLKID_REV_ID_GET(n) \
    (((n) >> ACPI_HPET_BLKID_REV_ID_BIT) & ACPI_HPET_BLKID_REV_ID_MASK)

#define ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_SET(r,n) \
    ((r) = ((r) & ~ACPI_HPET_BLKID_COUNTER_CLK_PERIOD) \
    | ACPI_HPET_BLKID_COUNTER_CLK_PERIOD_n((n)))
#define ACPI_HPET_BLKID_PCI_VEN_SET(r,n) \
    ((r) = ((r) & ~ACPI_HPET_BLKID_PCI_VEN) | ACPI_HPET_BLKID_PCI_VEN_n((n)))
#define ACPI_HPET_BLKID_LEGACY_CAP_SET(r,n)          ((r) \
    = ((r) & ~ACPI_HPET_BLKID_LEGACY_CAP) | ACPI_HPET_BLKID_LEGACY_CAP_n((n)))
#define ACPI_HPET_BLKID_COUNTER_SZ_SET(r,n)          ((r) \
    = ((r) & ~ACPI_HPET_BLKID_COUNTER_SZ) | ACPI_HPET_BLKID_COUNTER_SZ_n((n)))
#define ACPI_HPET_BLKID_NUM_TIM_CMP_SET(r,n)         ((r) = \
    ((r) & ~ACPI_HPET_BLKID_NUM_TIM_CMP) | ACPI_HPET_BLKID_NUM_TIM_CMP_n((n)))
#define ACPI_HPET_BLKID_REV_ID_SET(r,n) \
    ((r) = ((r) & ~ACPI_HPET_BLKID_REV_ID) | ACPI_HPET_BLKID_REV_ID_n((n)))

